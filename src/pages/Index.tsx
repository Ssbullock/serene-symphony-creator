import { useEffect, useRef, useState } from "react";
import { Link } from "react-router-dom";
import { Play, ArrowRight, CheckCircle, ExternalLink, ChevronDown, ChevronUp, Star, Sparkles } from "lucide-react";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Switch } from "@/components/ui/switch";
import { useUser } from '@/hooks/use-user';

const PAYMENT_LINKS = {
  premium_monthly: 'https://buy.stripe.com/test_bIYg0X9EG9pTgZqfYY',
  premium_annual: 'https://buy.stripe.com/test_dR6cOL3gifOh8sUcMO',
  lifetime: 'https://buy.stripe.com/test_7sIbKH6su7hL38AeUX',
} as const;

type PlanType = keyof typeof PAYMENT_LINKS;

const Index = () => {
  const { user } = useUser();
  const [isVisible, setIsVisible] = useState({
    howItWorks: false,
    features: false,
    pricing: false,
    testimonials: false,
  });
  
  const [billingType, setBillingType] = useState<'monthly' | 'annual'>('monthly');

  const howItWorksRef = useRef<HTMLDivElement>(null);
  const featuresRef = useRef<HTMLDivElement>(null);
  const pricingRef = useRef<HTMLDivElement>(null);
  const testimonialsRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.target === howItWorksRef.current) {
          setIsVisible(prev => ({ ...prev, howItWorks: entry.isIntersecting }));
        } else if (entry.target === featuresRef.current) {
          setIsVisible(prev => ({ ...prev, features: entry.isIntersecting }));
        } else if (entry.target === pricingRef.current) {
          setIsVisible(prev => ({ ...prev, pricing: entry.isIntersecting }));
        } else if (entry.target === testimonialsRef.current) {
          setIsVisible(prev => ({ ...prev, testimonials: entry.isIntersecting }));
        }
      });
    }, { threshold: 0.1 });

    if (howItWorksRef.current) observer.observe(howItWorksRef.current);
    if (featuresRef.current) observer.observe(featuresRef.current);
    if (pricingRef.current) observer.observe(pricingRef.current);
    if (testimonialsRef.current) observer.observe(testimonialsRef.current);

    return () => {
      if (howItWorksRef.current) observer.unobserve(howItWorksRef.current);
      if (featuresRef.current) observer.unobserve(featuresRef.current);
      if (pricingRef.current) observer.unobserve(pricingRef.current);
      if (testimonialsRef.current) observer.unobserve(testimonialsRef.current);
    };
  }, []);

  const handleSubscribe = async (plan: PlanType) => {
    try {
      const userId = user?.id; // Get the user ID from the current user
      localStorage.setItem('selectedPlan', plan);
      const paymentLink = PAYMENT_LINKS[plan];
      const redirectUrl = `/auth?redirect=${encodeURIComponent(paymentLink)}&client_reference_id=${userId}`;
      window.location.href = redirectUrl;
    } catch (error) {
      console.error('Error handling subscription:', error);
    }
  };

  return (
    <div className="min-h-screen flex flex-col">
      <Navbar transparent />
      
      <section id="home" className="pt-32 pb-20 px-4 sm:pt-40 md:pb-32 hero-gradient relative overflow-hidden">
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="flex flex-col lg:flex-row items-center gap-12">
            <div className="flex-1 text-center lg:text-left max-w-2xl mx-auto lg:mx-0">
              <h1 className="text-4xl sm:text-5xl md:text-6xl font-bold mb-6 leading-tight tracking-tight">
                Personalized AI Meditations for Your <span className="text-gradient animate-pulse-soft">Wellbeing</span> Journey
              </h1>
              <p className="text-xl text-foreground/80 mb-10">
                Experience custom-crafted meditations generated by AI to match your unique needs, style preferences, and goals.
              </p>
              <div className="flex flex-col sm:flex-row justify-center lg:justify-start gap-4 sm:gap-6">
                <Link 
                  to="/auth"
                  className="btn-primary-gradient text-base px-8 py-3 h-auto"
                >
                  Start for Free
                </Link>
                <button 
                  onClick={() => {/* Add video functionality later */}}
                  className="btn-secondary flex items-center justify-center text-base px-8 py-3 h-auto gap-2"
                >
                  <Play size={18} /> Watch Video
                </button>
              </div>
            </div>
            
            <div className="flex-1 relative">
              <div className="relative z-20 flex items-center justify-center">
                <div className="relative w-[280px] h-[560px] animate-float" style={{ animationDelay: "0.5s" }}>
                  <img 
                    src="/lovable-uploads/5afb2b1f-aa2a-42a3-bb63-955ccda6c753.png"
                    alt="Meditation App Interface"
                    className="w-full h-full object-contain transform hover:scale-105 transition-all duration-700"
                  />
                  <div className="absolute inset-0 rounded-[3rem] shadow-2xl opacity-20"></div>
                </div>
                <div className="absolute -right-24 top-20 w-[240px] h-[480px] animate-float" style={{ animationDelay: "1s" }}>
                  <img 
                    src="/lovable-uploads/5afb2b1f-aa2a-42a3-bb63-955ccda6c753.png"
                    alt="Meditation App Secondary View"
                    className="w-full h-full object-contain opacity-75 transform hover:scale-105 transition-all duration-700"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-1/4 left-1/4 w-[500px] h-[500px] rounded-full bg-blue-400/20 blur-[100px] animate-pulse-soft"></div>
          <div className="absolute bottom-1/4 right-1/4 w-[600px] h-[600px] rounded-full bg-blue-500/20 blur-[120px] animate-pulse-soft" style={{ animationDelay: "1s" }}></div>
          <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] rounded-full bg-cyan-400/20 blur-[150px] animate-pulse-soft" style={{ animationDelay: "2s" }}></div>
        </div>
        
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-1/4 left-1/3 h-32 w-32 rounded-full bg-blue-300 animate-float" style={{ animationDelay: "0.5s" }}></div>
          <div className="absolute bottom-1/4 right-1/3 h-48 w-48 rounded-full bg-purple-200 animate-float" style={{ animationDelay: "1.2s" }}></div>
          <div className="absolute top-2/3 left-1/2 h-24 w-24 rounded-full bg-green-200 animate-breathe" style={{ animationDelay: "0.8s" }}></div>
        </div>
        
        <div className="absolute inset-0 flex items-center justify-center overflow-hidden">
          <div className="relative w-full h-full max-w-6xl mx-auto">
            <div className="absolute top-1/4 left-1/5 w-2 h-2 rounded-full bg-white opacity-70 animate-ping" style={{ animationDelay: "0.5s" }}></div>
            <div className="absolute top-1/3 right-1/4 w-2 h-2 rounded-full bg-white opacity-70 animate-ping" style={{ animationDelay: "1.7s" }}></div>
            <div className="absolute bottom-1/2 left-1/3 w-2 h-2 rounded-full bg-white opacity-70 animate-ping" style={{ animationDelay: "2.1s" }}></div>
            <div className="absolute bottom-1/3 right-1/3 w-2 h-2 rounded-full bg-white opacity-70 animate-ping" style={{ animationDelay: "0.9s" }}></div>
            <div className="absolute top-2/3 right-1/5 w-2 h-2 rounded-full bg-white opacity-70 animate-ping" style={{ animationDelay: "1.3s" }}></div>
          </div>
        </div>
      </section>

      <section className="py-20 px-4 bg-white relative overflow-hidden">
        <div className="absolute inset-0 opacity-10 overflow-hidden">
          <div className="absolute top-1/4 left-1/3 h-48 w-48 rounded-full bg-blue-200 animate-float-slow"></div>
          <div className="absolute bottom-1/3 right-1/4 h-64 w-64 rounded-full bg-purple-200 animate-float-slow" style={{animationDelay: "1.5s"}}></div>
        </div>
        
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4 relative inline-block">
              Beautiful <span className="text-gradient animate-pulse-soft">Experience</span>
              <Sparkles className="absolute -right-6 -top-6 text-blue-400 animate-pulse-soft" size={24} />
            </h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto">
              Designed with care for the perfect meditation journey
            </p>
          </div>

          <div className="relative">
            <div className="flex justify-center items-center gap-4 md:gap-8">
              <img 
                src="/lovable-uploads/5afb2b1f-aa2a-42a3-bb63-955ccda6c753.png" 
                alt="Meditation App Interface" 
                className="w-full max-w-3xl transform hover:scale-105 transition-transform duration-700 hover:rotate-1"
              />
            </div>

            <div className="absolute -z-10 inset-0 blur-3xl opacity-20">
              <div className="absolute top-1/2 left-1/4 w-32 h-32 bg-blue-400 rounded-full"></div>
              <div className="absolute bottom-1/4 right-1/3 w-40 h-40 bg-purple-400 rounded-full"></div>
            </div>
          </div>
        </div>
      </section>

      <section id="how-it-works" ref={howItWorksRef} className="py-20 px-4 bg-white relative overflow-hidden">
        <div className="absolute inset-0 opacity-10 overflow-hidden">
          <div className="absolute top-1/5 left-1/4 h-32 w-32 rounded-full bg-blue-300 animate-float" style={{ animationDelay: "0.5s" }}></div>
          <div className="absolute bottom-1/4 right-1/3 h-48 w-48 rounded-full bg-purple-200 animate-float" style={{ animationDelay: "1.2s" }}></div>
          <div className="absolute top-2/3 left-1/2 h-24 w-24 rounded-full bg-green-200 animate-breathe" style={{ animationDelay: "0.8s" }}></div>
        </div>
        
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4 relative inline-block">
              How It <span className="text-gradient animate-pulse-soft">Works</span>
              <Sparkles className="absolute -right-6 -top-6 text-yellow-400 animate-pulse-soft" size={24} />
            </h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto">
              Create your perfect meditation in just a few simple steps
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 md:gap-12">
            {[
              {
                title: "Choose Your Preferences",
                description: "Select your meditation style, duration, and specific focus area or goal.",
                icon: (
                  <div className="mb-6 inline-flex items-center justify-center h-16 w-16 rounded-full bg-meditation-light-blue text-meditation-deep-blue animate-breathe">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  </div>
                ),
                delay: 0
              },
              {
                title: "AI Generates Your Meditation",
                description: "Our AI creates a personalized meditation script based on your preferences.",
                icon: (
                  <div className="mb-6 inline-flex items-center justify-center h-16 w-16 rounded-full bg-meditation-light-blue text-meditation-deep-blue animate-breathe" style={{ animationDelay: "1s" }}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                    </svg>
                  </div>
                ),
                delay: 100
              },
              {
                title: "Listen & Download",
                description: "Enjoy your custom meditation now or save it for later. Download to listen offline anytime.",
                icon: (
                  <div className="mb-6 inline-flex items-center justify-center h-16 w-16 rounded-full bg-meditation-light-blue text-meditation-deep-blue animate-breathe" style={{ animationDelay: "2s" }}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm-12-6l12-3" />
                    </svg>
                  </div>
                ),
                delay: 200
              }
            ].map((step, index) => (
              <div 
                key={index} 
                className={`glass-card p-8 rounded-xl text-center transform transition-all duration-700 hover:scale-105 hover:shadow-lg ${isVisible.howItWorks ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}
                style={{ transitionDelay: `${step.delay}ms` }}
              >
                {step.icon}
                <h3 className="text-xl font-semibold mb-3">{step.title}</h3>
                <p className="text-foreground/70">{step.description}</p>
              </div>
            ))}
          </div>

          <div className="text-center mt-16">
            <Link to="/auth" className="inline-flex items-center text-meditation-deep-blue hover:text-meditation-deep-blue/80 font-medium transition-colors transform hover:translate-x-1">
              Get Started <ArrowRight size={18} className="ml-2 animate-bounce-slow" />
            </Link>
          </div>
        </div>
      </section>

      <section id="features" ref={featuresRef} className="py-20 px-4 bg-meditation-tranquil relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-blue-50 to-purple-50 opacity-60"></div>
        
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-1/4 right-1/4 w-2 h-2 rounded-full bg-pink-400 opacity-60 animate-ping" style={{ animationDelay: "0.5s" }}></div>
          <div className="absolute bottom-1/3 left-1/5 w-2 h-2 rounded-full bg-blue-500 opacity-60 animate-ping" style={{ animationDelay: "1.7s" }}></div>
          <div className="absolute top-2/3 right-1/3 w-2 h-2 rounded-full bg-green-400 opacity-60 animate-ping" style={{ animationDelay: "0.9s" }}></div>
        </div>
        
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4 relative inline-block">
              Key <span className="text-gradient animate-pulse-soft">Features</span>
              <Sparkles className="absolute -right-6 -top-6 text-purple-400 animate-pulse-soft" size={24} />
            </h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto">
              Discover what makes our AI meditation platform unique
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {[
              {
                title: "AI-Powered Narration",
                description: "Choose from multiple natural-sounding voices with perfect pronunciation and emotional resonance.",
                icon: (
                  <div className="h-12 w-12 rounded-lg bg-meditation-calm-blue flex items-center justify-center shadow-lg shadow-blue-200/50 animate-pulse-soft">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
                    </svg>
                  </div>
                ),
                delay: 0
              },
              {
                title: "Full Customization",
                description: "Set duration, style, focus areas, and more to create the perfect meditation for your needs.",
                icon: (
                  <div className="h-12 w-12 rounded-lg bg-meditation-calm-blue flex items-center justify-center shadow-lg shadow-blue-200/50 animate-pulse-soft" style={{animationDelay: "0.3s"}}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
                    </svg>
                  </div>
                ),
                delay: 100
              },
              {
                title: "Background Audio",
                description: "Add ambient soundscapes like rain, ocean waves, or gentle music to enhance your practice.",
                icon: (
                  <div className="h-12 w-12 rounded-lg bg-meditation-calm-blue flex items-center justify-center shadow-lg shadow-blue-200/50 animate-pulse-soft" style={{animationDelay: "0.6s"}}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm-12-6l12-3" />
                    </svg>
                  </div>
                ),
                delay: 200
              },
              {
                title: "Save & Download",
                description: "Build a personal library of meditations tailored to different moods and needs.",
                icon: (
                  <div className="h-12 w-12 rounded-lg bg-meditation-calm-blue flex items-center justify-center shadow-lg shadow-blue-200/50 animate-pulse-soft" style={{animationDelay: "0.9s"}}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
                    </svg>
                  </div>
                ),
                delay: 300
              }
            ].map((feature, index) => (
              <div 
                key={index} 
                className={`flex p-6 bg-white rounded-xl shadow-sm hover:shadow-md transition-all duration-500 hover:scale-102 transform ${isVisible.features ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}
                style={{ transitionDelay: `${feature.delay}ms` }}
              >
                {feature.icon}
                <div className="ml-5">
                  <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
                  <p className="text-foreground/70">{feature.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section id="pricing" ref={pricingRef} className="py-20 px-4 bg-white relative overflow-hidden">
        <div className="absolute inset-0 opacity-10 overflow-hidden">
          <div className="absolute top-1/4 left-1/5 h-64 w-64 rounded-full bg-gradient-to-r from-blue-200 to-green-200 animate-float-slow"></div>
          <div className="absolute bottom-1/3 right-1/5 h-48 w-48 rounded-full bg-gradient-to-r from-purple-200 to-pink-200 animate-float-slow" style={{animationDelay: "1s"}}></div>
        </div>
        
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="text-center mb-12">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4 relative inline-block">
              Pricing <span className="text-gradient animate-pulse-soft">Plans</span>
              <Sparkles className="absolute -right-6 -top-6 text-green-400 animate-pulse-soft" size={24} />
            </h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto mb-10">
              Choose the perfect plan for your meditation journey
            </p>
            
            <div className="flex items-center justify-center mb-8">
              <span className={`mr-3 ${billingType === 'monthly' ? 'font-semibold text-meditation-deep-blue' : 'text-foreground/70'}`}>Monthly</span>
              <Switch
                checked={billingType === 'annual'}
                onCheckedChange={() => setBillingType(billingType === 'monthly' ? 'annual' : 'monthly')}
                className="mx-2"
              />
              <span className={`ml-3 ${billingType === 'annual' ? 'font-semibold text-meditation-deep-blue' : 'text-foreground/70'}`}>
                Annual <span className="text-sm bg-green-100 text-green-800 px-2 py-0.5 rounded-full ml-1">20% off</span>
              </span>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                name: "Free",
                price: "$0",
                description: "Start your meditation journey",
                features: [
                  "3 AI meditations per month",
                  "2 voice options",
                  "Basic backgrounds",
                  "5-minute maximum duration",
                  "Community support"
                ],
                btnText: "Get Started Free",
                popular: false,
                delay: 0,
                type: null
              },
              {
                name: "Premium",
                price: billingType === 'monthly' ? "$9.99" : "$7.99",
                period: "per month",
                totalPrice: billingType === 'annual' ? "$95.88" : undefined,
                description: "Perfect for those just starting their meditation journey",
                features: [
                  "Unlimited AI meditations",
                  "All voice options",
                  "All background sounds",
                  "Download meditations",
                  "New voices added monthly"
                ],
                btnText: billingType === 'monthly' ? "Get Premium Monthly" : "Get Premium Annual",
                popular: true,
                delay: 100,
                type: (billingType === 'monthly' ? 'premium_monthly' : 'premium_annual') as PlanType
              },
              {
                name: "Lifetime",
                price: "$57.00",
                description: "One-time payment for unlimited access forever",
                features: [
                  "All Premium features",
                  "Never pay again",
                  "Lifetime updates",
                  "VIP support",
                  "Personalized meditation journey"
                ],
                btnText: "Get Lifetime Access",
                popular: false,
                delay: 200,
                type: 'lifetime' as PlanType,
                badge: "Great Deal"
              }
            ].map((plan, index) => (
              <div 
                key={index}
                className={`rounded-xl overflow-hidden transition-all duration-700 hover:shadow-xl ${isVisible.pricing ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'} ${plan.popular ? 'border-2 border-meditation-deep-blue shadow-lg transform md:-translate-y-4 hover:scale-105' : 'border border-gray-200 hover:scale-102'}`}
                style={{ transitionDelay: `${plan.delay}ms` }}
              >
                {plan.popular && (
                  <div className="bg-meditation-deep-blue text-white text-center py-2 text-sm font-medium">
                    Most Popular
                  </div>
                )}
                <div className="p-8">
                  <h3 className="text-xl font-semibold mb-4">
                    {plan.name}
                    {plan.badge && (
                      <span className="text-sm bg-green-100 text-green-800 px-2 py-0.5 rounded-full ml-2">
                        {plan.badge}
                      </span>
                    )}
                  </h3>
                  <div className="mb-1">
                    <span className="text-3xl font-bold">{plan.price}</span>
                    {plan.period && <span className="text-foreground/70 ml-1 text-sm">{plan.period}</span>}
                  </div>
                  <p className="text-foreground/70 mb-6 text-sm">{plan.description}</p>
                  <hr className="my-6" />
                  <ul className="space-y-4 mb-8">
                    {plan.features.map((feature, i) => (
                      <li key={i} className="flex items-start text-sm">
                        <CheckCircle size={18} className="text-meditation-deep-blue flex-shrink-0 mr-2 animate-pulse-soft" style={{animationDelay: `${i * 0.2}s`}} />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                  {plan.type ? (
                    <button 
                      onClick={() => handleSubscribe(plan.type!)}
                      className={`w-full block text-center py-3 rounded-lg font-medium transition-all hover:scale-102 ${plan.popular ? 'bg-meditation-deep-blue text-white hover:bg-meditation-deep-blue/90' : 'bg-meditation-light-blue text-foreground hover:bg-meditation-light-blue/90'}`}
                    >
                      {plan.btnText}
                    </button>
                  ) : (
                    <Link 
                      to="/auth" 
                      className={`w-full block text-center py-3 rounded-lg font-medium transition-all hover:scale-102 bg-meditation-light-blue text-foreground hover:bg-meditation-light-blue/90`}
                    >
                      {plan.btnText}
                    </Link>
                  )}
                </div>
              </div>
            ))}
          </div>

          <div className="mt-12 text-center">
            <p className="text-sm text-foreground/60">
              All paid plans include a 7-day money-back guarantee. No questions asked.
            </p>
          </div>
        </div>
      </section>

      <section id="testimonials" ref={testimonialsRef} className="py-20 px-4 bg-meditation-tranquil relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-tr from-blue-50 via-transparent to-purple-50 opacity-70"></div>
        
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-1/4 left-1/3 w-2 h-2 rounded-full bg-yellow-300 opacity-50 animate-ping" style={{animationDelay: "1.3s"}}></div>
          <div className="absolute top-1/2 right-1/4 w-2 h-2 rounded-full bg-blue-300 opacity-50 animate-ping" style={{animationDelay: "0.7s"}}></div>
          <div className="absolute bottom-1/3 left-1/2 w-2 h-2 rounded-full bg-green-300 opacity-50 animate-ping" style={{animationDelay: "2.1s"}}></div>
        </div>
        
        <div className="container mx-auto max-w-6xl relative z-10">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4 relative inline-block">
              What Our <span className="text-gradient animate-pulse-soft">Users</span> Say
              <Sparkles className="absolute -right-6 -top-6 text-yellow-400 animate-pulse-soft" size={24} />
            </h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto">
              Join thousands of people who have transformed their meditation practice
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                quote: "The AI-generated meditations are so personal and effective. It's like having a meditation teacher who knows exactly what I need.",
                author: "Sarah M.",
                role: "Yoga Instructor",
                rating: 5,
                delay: 0
              },
              {
                quote: "As someone with ADHD, finding meditations that keep me engaged has been a challenge. This app creates the perfect meditations for my specific needs.",
                author: "Michael T.",
                role: "Software Engineer",
                rating: 5,
                delay: 100
              },
              {
                quote: "I was skeptical at first, but after trying the personalized sleep meditation, I'm completely sold. Best sleep I've had in months!",
                author: "Jessica L.",
                role: "Healthcare Professional",
                rating: 5,
                delay: 200
              }
            ].map((testimonial, index) => (
              <div 
                key={index}
                className={`glass-card p-8 rounded-xl transition-all duration-700 hover:scale-105 hover:shadow-lg ${isVisible.testimonials ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}
                style={{ transitionDelay: `${testimonial.delay}ms` }}
              >
                <div className="flex text-yellow-400 mb-4">
                  {[...Array(testimonial.rating)].map((_, i) => (
                    <Star key={i} size={20} fill="currentColor" className="animate-pulse-soft" style={{animationDelay: `${i * 0.2}s`}} />
                  ))}
                </div>
                <p className="text-foreground/80 mb-6 italic relative">
                  <span className="absolute -top-4 -left-2 text-4xl text-blue-200 opacity-50">"</span>
                  {testimonial.quote}
                  <span className="absolute -bottom-4 -right-2 text-4xl text-blue-200 opacity-50">"</span>
                </p>
                <div className="flex items-center">
                  <div className="h-12 w-12 rounded-full bg-meditation-calm-blue flex items-center justify-center text-white font-medium animate-pulse-soft">
                    {testimonial.author.charAt(0)}
                  </div>
                  <div className="ml-4">
                    <h4 className="font-semibold">{testimonial.author}</h4>
                    <p className="text-sm text-foreground/70">{testimonial.role}</p>
                  </div>
                </div>
                <div className="mt-4">
                  <span className="text-xs px-2 py-1 bg-green-100 text-green-800 rounded-full animate-pulse-soft">Verified User</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section className="py-20 px-4 bg-white">
        <div className="container mx-auto max-w-4xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold mb-4">Frequently Asked Questions</h2>
            <p className="text-lg text-foreground/70 max-w-2xl mx-auto">
              Find answers to common questions about our meditation platform
            </p>
          </div>

          <Accordion type="single" collapsible className="w-full">
            {[
              {
                question: "How does AI create personalized meditations?",
                answer: "Our AI analyzes your preferences, goals, and meditation style to generate a unique script tailored to your needs. It then uses advanced text-to-speech technology to create a natural-sounding narration, which can be combined with your choice of background sounds."
              },
              {
                question: "Can I download meditations for offline use?",
                answer: "Yes! All meditation audio files can be downloaded and saved for offline listening. This is especially helpful for meditation during travel or in areas with limited connectivity."
              },
              {
                question: "How many meditations can I create?",
                answer: "All paid plans include unlimited meditation creation. You can generate as many different meditations as you need for various purposes - sleep, anxiety, focus, gratitude, and more."
              },
              {
                question: "What types of meditation styles are available?",
                answer: "We offer a wide range of meditation styles including mindfulness, breathwork, body scan, loving-kindness, visualization, and guided imagery. Each style can be customized to your specific needs and preferences."
              },
              {
                question: "Do you offer refunds?",
                answer: "Yes, we offer a 7-day money-back guarantee for all our plans. If you're not completely satisfied with your purchase, contact our support team for a full refund, no questions asked."
              }
            ].map((item, index) => (
              <AccordionItem key={index} value={`item-${index}`} className="border-b border-gray-200 last:border-0">
                <AccordionTrigger className="text-left py-5 hover:no-underline">
                  <span className="font-medium text-lg">{item.question}</span>
                </AccordionTrigger>
                <AccordionContent className="text-foreground/70 pb-5">
                  {item.answer}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>

          <div className="mt-12 text-center">
            <p className="text-foreground/70 mb-4">Still have questions?</p>
            <Link to="/contact" className="text-meditation-deep-blue hover:text-meditation-deep-blue/80 font-medium flex items-center justify-center">
              Contact our support team <ExternalLink size={16} className="ml-2" />
            </Link>
          </div>
        </div>
      </section>

      <section className="py-20 px-4 bg-meditation-calm-blue/10">
        <div className="container mx-auto max-w-4xl text-center">
          <h2 className="text-3xl sm:text-4xl font-bold mb-6">Ready to Transform Your Meditation Practice?</h2>
          <p className="text-xl text-foreground/70 mb-8 max-w-2xl mx-auto">
            Join thousands of users experiencing the benefits of AI-personalized meditation
          </p>
          <Link to="/auth" className="btn-primary-gradient text-base px-10 py-3 h-auto">
            Get Started Now
          </Link>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default Index;
