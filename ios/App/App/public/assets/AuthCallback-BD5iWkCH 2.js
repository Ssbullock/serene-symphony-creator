import{v as m,H as p,r as w,j as g,K as b,I as t}from"./index-X57gThh1.js";const C=()=>{const r=m(),[h]=p(),a=h.get("redirect");return w.useEffect(()=>{(async()=>{var n;try{if(window.location.hash){const o=new URLSearchParams(window.location.hash.substring(1)),c=o.get("access_token"),l=o.get("refresh_token");if(c&&l){const{data:{session:e},error:u}=await t.auth.setSession({access_token:c,refresh_token:l});if(u)throw u;if(e){const{error:d}=await t.from("users").upsert([{id:e.user.id,email:e.user.email,name:e.user.user_metadata.name||((n=e.user.email)==null?void 0:n.split("@")[0]),auth_id:e.user.id,last_login_at:new Date().toISOString()}],{onConflict:"id",ignoreDuplicates:!1});if(d&&console.error("Error upserting user profile:",d),a&&e.user.email){const f=decodeURIComponent(a);window.location.href=`${f}?prefilled_email=${encodeURIComponent(e.user.email)}`;return}r("/dashboard");return}}}const{data:{session:s},error:i}=await t.auth.getSession();if(i)throw i;if(s)if(a&&s.user.email){const o=decodeURIComponent(a);window.location.href=`${o}?prefilled_email=${encodeURIComponent(s.user.email)}`}else r("/dashboard");else r("/auth")}catch(s){console.error("Error handling auth callback:",s),r("/auth")}})()},[r,a]),g.jsx(b,{})};export{C as default};
