import{c as a}from"./index-X57gThh1.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const i=a("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]),n=()=>(console.log("Running in production mode"),"https://serene-symphony-backend.onrender.com"),u={baseUrl:n(),async get(o){try{console.log(`Making GET request to: ${this.baseUrl}${o}`);const r=await fetch(`${this.baseUrl}${o}`,{credentials:"include",headers:{"Content-Type":"application/json"}});if(!r.ok){let s;try{s=(await r.json()).error||r.statusText}catch{s=r.statusText}throw console.error("API error response:",{status:r.status,statusText:r.statusText,error:s}),new Error(`API call failed: ${s}`)}const e=await r.json();return console.log(`Successful response from ${o}:`,e),e}catch(r){throw console.error("API call error:",{endpoint:o,error:r instanceof Error?r.message:"Unknown error",stack:r instanceof Error?r.stack:void 0}),r}},async post(o,r){try{console.log(`Making POST request to: ${this.baseUrl}${o}`,{endpoint:o,requestData:r});const e=await fetch(`${this.baseUrl}${o}`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(r)});if(!e.ok){let t;try{t=(await e.json()).error||e.statusText}catch{t=e.statusText}throw console.error("API error response:",{status:e.status,statusText:e.statusText,error:t}),new Error(`API call failed: ${t}`)}const s=await e.json();if(console.log(`Successful response from ${o}:`,s),s.status==="error")throw new Error(`API error: ${s.error||"Unknown error"}`);return s}catch(e){throw console.error("API call error:",{endpoint:o,requestData:r,error:e instanceof Error?e.message:"Unknown error",stack:e instanceof Error?e.stack:void 0}),e}}};export{i as C,u as a};
